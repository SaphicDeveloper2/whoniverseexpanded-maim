plugins {
    id 'eclipse'
    id 'net.minecraftforge.gradle' version '[6.0.16,6.2)'
    id 'com.github.johnrengelman.shadow' version '8.1.1'
}

version = '1.1'
group = 'net.sapphic.whoniverseexpanded'
archivesBaseName = 'whoniverseexpanded'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)

minecraft {
    mappings channel: 'official', version: '1.20.1'

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    copyIdeResources = true

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                whoniverseexpanded {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            mods {
                whoniverseexpanded {
                    source sourceSets.main
                }
            }
        }
    }
}

// Create a new configuration specifically for shaded dependencies
configurations {
    shadowImplementation {
        canBeResolved = true
        canBeConsumed = false
    }
    implementation.extendsFrom shadowImplementation
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.20.1-47.3.0'

    // Local API dependency to be bundled into the mod
    shadowImplementation fileTree(dir: 'libs', include: ['*.jar'])
}

// Configure the shadowJar task to bundle dependencies
shadowJar {
    configurations = [project.configurations.shadowImplementation]
    archiveClassifier.set('dev') // avoid conflicts with reobf
    relocate 'wcore.sapphic', 'net.whoniverseexpanded.dependencies.whoniverseapi'
}

// Register shadowJar for reobfuscation
reobf {
    shadowJar {}
}

// Make build run shadowJar â†’ reobfShadowJar
tasks.build {
    dependsOn tasks.reobfShadowJar
}

// Rename final jar to a clean name after reobf
tasks.reobfShadowJar {
    doLast {
        def finalName = "${archivesBaseName}-${version}.jar"
        def buildLibs = layout.buildDirectory.dir("libs").get().asFile
        fileTree(buildLibs).matching {
            include "*-dev.jar"
        }.forEach { f ->
            f.renameTo(new File(buildLibs, finalName))
        }
    }
}

// Disable the plain jar task (we only want the shaded one)
tasks.jar.enabled = false

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

tasks.named('processResources', ProcessResources) {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Pull in extra dependencies
apply from: 'dependencies.gradle'
